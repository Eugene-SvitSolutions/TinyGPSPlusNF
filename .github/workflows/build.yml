# Copyright (c) TinyGPSPlusNF, .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.

# This workflow will build the solution and release a nuget.

name: Build nanoFramework lib and release nuget

on: [push, pull_request]

defaults:
  run:
    shell: pwsh

jobs:
  build-library:
    name: Build TinyGPSPlusNF library
    timeout-minutes: 15
    runs-on: windows-latest

    env:
      solution: 'TinyGPSPlusNF.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
      classLibName: 'TinyGPSPlusNF'
      nugetPackageName: 'TinyGPSPlusNF'

    defaults:
      run:
        working-directory: main/src

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: main

      - name: Checkout tools repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: nanoframework/nf-tools
          path: tools

      - name: Install build components for nanoFramework
        run: ./github-actions/install-nf-build-components.ps1
        working-directory: tools

      - name: Setup MSBuild Path
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64

      - name: Setup nuget
        uses: nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NUGET_API_KEY }}

      - name: Restore nuget packages
        run: nuget restore ${{ env.solution }} -ConfigFile NuGet.Config

      - name: Build App
        run: msbuild ${{ env.solution }} /p:Configuration=${{ env.buildConfiguration }}

      - name: Pack nuget
        run: nuget pack ${{ env.nugetPackageName }}.nuspec -Symbols -SymbolPackageFormat snupkg -properties Configuration=${{ env.buildConfiguration }}

      - name: Upload nuget Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: TinyGPSPlusNF
          path: |
            ${{ github.workspace }}\**\*.nupkg
            ${{ github.workspace }}\**\*.snupkg

      - name: Publish nuget to nuget.org
        run: nuget push "**/${{ env.nugetPackageName }}*.nupkg" -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}} -SkipDuplicate